# api
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>
<android.telephony.SmsManager: android.net.Uri addMultimediaMessageDraft(android.net.Uri)>
<android.telephony.SmsManager: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String)>
<android.telephony.SmsManager: android.net.Uri importMultimediaMessage(android.net.Uri,java.lang.String,long,boolean,boolean)>
<android.telephony.SmsManager: android.net.Uri importTextMessage(java.lang.String,int,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms$Stub: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<com.android.internal.telephony.IMms$Stub: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IMms$Stub: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms$Stub: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.internal.telephony.IMms: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<com.android.internal.telephony.IMms: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IMms: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.IMms: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<com.android.internal.telephony.InboundSmsHandler$DeliveringState: boolean processMessage(android.os.Message)>
<com.android.internal.telephony.InboundSmsHandler$SmsBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.internal.telephony.InboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.InboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.InboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.InboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.InboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.InboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.InboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>
<com.android.internal.telephony.InboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>
<com.android.internal.telephony.InboundSmsHandler: void handleNewSms(android.os.AsyncResult)>
<com.android.internal.telephony.SMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int processCdmaWapPdu(byte[],int,java.lang.String,long)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>
<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleNewSms(android.os.AsyncResult)>
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void handleSms(byte[])>
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void handleSmses(java.util.ArrayList)>
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)>
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>
<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void handleNewSms(android.os.AsyncResult)>
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
<com.android.internal.telephony.gsm.SIMRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)>
<com.android.internal.telephony.gsm.SIMRecords: void handleSms(byte[])>
<com.android.internal.telephony.gsm.SIMRecords: void handleSmses(java.util.ArrayList)>
<com.android.mms.transaction.MessageSender: boolean sendMessage(long)>
<com.android.mms.transaction.MessageStatusReceiver: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[])>
<com.android.mms.transaction.MessageStatusReceiver: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>
<com.android.mms.transaction.MessageStatusReceiver: boolean updateMessageStatus(android.content.Context,android.net.Uri,byte[])>
<com.android.mms.transaction.MessageStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.mms.transaction.MessageStatusService: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>
<com.android.mms.transaction.MessageStatusService: void onHandleIntent(android.content.Intent)>
<com.android.mms.transaction.MessagingNotification$1: void run()>
<com.android.mms.transaction.MessagingNotification$3: java.lang.Integer doInBackground(java.lang.Void[])>
<com.android.mms.transaction.MessagingNotification$3: java.lang.Object doInBackground(java.lang.Object[])>
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Integer)>
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Object)>
<com.android.mms.transaction.MessagingNotification$4: java.lang.Integer doInBackground(java.lang.Void[])>
<com.android.mms.transaction.MessagingNotification$4: java.lang.Object doInBackground(java.lang.Object[])>
<com.android.mms.transaction.MessagingNotification$4: void onPostExecute(java.lang.Integer)>
<com.android.mms.transaction.MessagingNotification$4: void onPostExecute(java.lang.Object)>
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsDeliveryInfo getSmsNewDeliveryInfo(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getMmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getNewMessageNotificationInfo(java.lang.String,java.lang.String,android.content.Context,int,java.lang.String,long,long,int)>
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getSmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$NotificationInfo getNewMessageNotificationInfo(android.content.Context,boolean,java.lang.String,java.lang.String,java.lang.String,long,long,android.graphics.Bitmap,com.android.mms.data.Contact,int)>
<com.android.mms.transaction.MessagingNotification: int access$300(android.content.Context,long[])>
<com.android.mms.transaction.MessagingNotification: int getDownloadFailedMessageCount(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: int getUndeliveredMessageCount(android.content.Context,long[])>
<com.android.mms.transaction.MessagingNotification: void addMmsNotificationInfos(android.content.Context,java.util.Set)>
<com.android.mms.transaction.MessagingNotification: void addMmsNotificationInfos(android.content.Context,java.util.Set,java.util.SortedSet)>
<com.android.mms.transaction.MessagingNotification: void addSmsNotificationInfos(android.content.Context,java.util.Set)>
<com.android.mms.transaction.MessagingNotification: void addSmsNotificationInfos(android.content.Context,java.util.Set,java.util.SortedSet)>
<com.android.mms.transaction.MessagingNotification: void blockingUpdateAllNotifications(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: void blockingUpdateAllNotifications(android.content.Context,long)>
<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,boolean,boolean)>
<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,long,boolean)>
<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)>
<com.android.mms.transaction.MessagingNotification: void notifyFailed(android.content.Context,boolean,long,boolean)>
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)>
<com.android.mms.transaction.MessagingNotification: void updateDownloadFailedNotification(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotification(android.content.Context)>
<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotificationForThread(android.content.Context,long)>
<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)>
<com.android.mms.transaction.MmsMessageSender: void sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)>
<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,com.google.android.mms.pdu.NotificationInd)>
<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,java.lang.String)>
<com.android.mms.transaction.NotificationTransaction: void notifyObservers()>
<com.android.mms.transaction.NotificationTransaction: void run()>
<com.android.mms.transaction.Observable: void notifyObservers()>
<com.android.mms.transaction.Observer: void update(com.android.mms.transaction.Observable)>
<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Void doInBackground(android.content.Intent[])>
<com.android.mms.transaction.PushReceiver: boolean access$100(android.content.Context,com.google.android.mms.pdu.NotificationInd)>
<com.android.mms.transaction.PushReceiver: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>
<com.android.mms.transaction.PushReceiver: long access$000(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>
<com.android.mms.transaction.PushReceiver: long findThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>
<com.android.mms.transaction.ReadRecTransaction: void notifyObservers()>
<com.android.mms.transaction.ReadRecTransaction: void process()>
<com.android.mms.transaction.ReadRecTransaction: void run()>
<com.android.mms.transaction.RetrieveTransaction: boolean isDuplicateMessage(android.content.Context,com.google.android.mms.pdu.RetrieveConf)>
<com.android.mms.transaction.RetrieveTransaction: void notifyObservers()>
<com.android.mms.transaction.RetrieveTransaction: void run()>
<com.android.mms.transaction.RetryScheduler: int getResponseStatus(long)>
<com.android.mms.transaction.RetryScheduler: int getRetrieveStatus(long)>
<com.android.mms.transaction.RetryScheduler: void scheduleRetry(android.net.Uri)>
<com.android.mms.transaction.RetryScheduler: void setRetryAlarm(android.content.Context)>
<com.android.mms.transaction.RetryScheduler: void update(com.android.mms.transaction.Observable)>
<com.android.mms.transaction.SendTransaction: void notifyObservers()>
<com.android.mms.transaction.SendTransaction: void run()>
<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)>
<com.android.mms.transaction.SmsMessageSender: java.lang.String getOutgoingServiceCenter(long)>
<com.android.mms.transaction.SmsMessageSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int)>
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int,java.lang.String)>
<com.android.mms.transaction.SmsReceiverService: android.net.Uri replaceMessage(android.content.Context,android.telephony.SmsMessage[],int)>
<com.android.mms.transaction.SmsReceiverService: android.net.Uri storeMessage(android.content.Context,android.telephony.SmsMessage[],int)>
<com.android.mms.transaction.SmsReceiverService: int moveOutboxMessagesToFailedBox()>
<com.android.mms.transaction.SmsReceiverService: int moveOutboxMessagesToQueuedBox()>
<com.android.mms.transaction.SmsReceiverService: void access$000(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>
<com.android.mms.transaction.SmsReceiverService: void access$100(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>
<com.android.mms.transaction.SmsReceiverService: void access$200(com.android.mms.transaction.SmsReceiverService)>
<com.android.mms.transaction.SmsReceiverService: void access$300(com.android.mms.transaction.SmsReceiverService,android.content.Intent)>
<com.android.mms.transaction.SmsReceiverService: void access$400(com.android.mms.transaction.SmsReceiverService)>
<com.android.mms.transaction.SmsReceiverService: void access$500(com.android.mms.transaction.SmsReceiverService)>
<com.android.mms.transaction.SmsReceiverService: void handleBootCompleted()>
<com.android.mms.transaction.SmsReceiverService: void handleSendInactiveMessage()>
<com.android.mms.transaction.SmsReceiverService: void handleSendMessage()>
<com.android.mms.transaction.SmsReceiverService: void handleServiceStateChanged(android.content.Intent)>
<com.android.mms.transaction.SmsReceiverService: void handleSmsReceived(android.content.Intent,int)>
<com.android.mms.transaction.SmsReceiverService: void handleSmsSent(android.content.Intent,int)>
<com.android.mms.transaction.SmsReceiverService: void messageFailedToSend(android.net.Uri,int)>
<com.android.mms.transaction.SmsReceiverService: void moveOutboxMessagesToQueuedBox()>
<com.android.mms.transaction.SmsReceiverService: void sendFirstQueuedMessage()>
<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)>
<com.android.mms.transaction.SmsSingleRecipientSender: java.lang.String getOutgoingServiceCenter(long)>
<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String,java.lang.String,long,boolean,android.net.Uri)>
<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>
<com.android.mms.transaction.Transaction: void notifyObservers()>
<com.android.mms.transaction.Transaction: void process()>
<com.android.mms.transaction.TransactionService$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.mms.transaction.TransactionService$ServiceHandler: boolean processTransaction(com.android.mms.transaction.Transaction)>
<com.android.mms.transaction.TransactionService$ServiceHandler: void processPendingTransaction(com.android.mms.transaction.Transaction,com.android.mms.transaction.TransactionSettings)>
<com.android.mms.transaction.TransactionService: int onStartCommand(android.content.Intent,int,int)>
<com.android.mms.transaction.TransactionService: void access$200(com.android.mms.transaction.TransactionService)>
<com.android.mms.transaction.TransactionService: void launchTransaction(int,com.android.mms.transaction.TransactionBundle,boolean)>
<com.android.mms.transaction.TransactionService: void onDestroy()>
<com.android.mms.transaction.TransactionService: void onNewIntent(android.content.Intent,int)>
<com.android.mms.transaction.TransactionService: void renewMmsConnectivity()>
<com.android.mms.transaction.TransactionService: void update(com.android.mms.transaction.Observable)>
<com.android.providers.telephony.MmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.providers.telephony.MmsSmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.providers.telephony.MmsSmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.providers.telephony.MmsSmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.providers.telephony.SmsProvider: android.net.Uri insertInner(android.net.Uri,android.content.ContentValues)>
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)>
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>
<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>
<com.google.android.mms.util.PduCache: android.net.Uri normalizeKey(android.net.Uri)>
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>
<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>
# uri
content://mms-sms
content://sms
content://sms/inbox
content://sms/draft
content://sms/outbox
content://sms/sent
content://sms/all
content://sms/failed
content://sms/undelivered
content://mms
content://mms/inbox
content://mms/part
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>
# TODO add
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>