<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>
<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>
<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>
<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>
<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)>
<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService$Stub: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService$Stub: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<android.net.sip.ISipService$Stub: android.net.sip.SipProfile[] getListOfProfiles()>
<android.net.sip.ISipService$Stub: boolean isOpened(java.lang.String)>
<android.net.sip.ISipService$Stub: boolean isRegistered(java.lang.String)>
<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.net.sip.ISipService$Stub: void close(java.lang.String)>
<android.net.sip.ISipService$Stub: void open(android.net.sip.SipProfile)>
<android.net.sip.ISipService$Stub: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService$Stub: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<android.net.sip.ISipService: android.net.sip.SipProfile[] getListOfProfiles()>
<android.net.sip.ISipService: boolean isOpened(java.lang.String)>
<android.net.sip.ISipService: boolean isRegistered(java.lang.String)>
<android.net.sip.ISipService: void close(java.lang.String)>
<android.net.sip.ISipService: void open(android.net.sip.SipProfile)>
<android.net.sip.ISipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
<android.net.sip.ISipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>
<android.net.sip.SipManager: boolean isOpened(java.lang.String)>
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>
<android.net.sip.SipManager: void close(java.lang.String)>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>
<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>
<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>
<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>
<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String)>
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,int)>
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String)>
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,int)>
<com.android.phone.SipBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.phone.SipBroadcastReceiver: void takeCall(android.content.Intent)>
<com.android.phone.SipCallOptionHandler: void createSipPhoneIfNeeded(android.net.sip.SipProfile)>
<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>
<com.android.server.sip.SipService: boolean isOpened(java.lang.String)>
<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)>
<com.android.server.sip.SipService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.server.sip.SipService: void close(java.lang.String)>
<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>
<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
